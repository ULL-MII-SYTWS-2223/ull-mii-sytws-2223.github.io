(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{760:function(n,s,e){"use strict";e.r(s);var t=e(9),a=Object(t.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("p",[e("a",{attrs:{href:"https://github.com/documentationjs/documentation/blob/HEAD/docs/GETTING_STARTED.md",target:"_blank",rel:"noopener noreferrer"}},[n._v("documentation"),e("OutboundLink")],1),n._v(" is a "),e("strong",[n._v("documentation generator")]),n._v(". It's used to generate documentation from comments "),e("em",[n._v("within your code")]),n._v(". "),e("code",[n._v("documentation")]),n._v(" processes JavaScript comments\nin the "),e("a",{attrs:{href:"https://jsdoc.app/about-getting-started.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("JSDoc format"),e("OutboundLink")],1),n._v(".")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("➜  scapegoat git:(master) npx documentation --version\n13.1.1\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br")])]),e("p",[n._v("For the most part, the things you document will be functions or classes\nof JavaScript libraries. Let's start with a function and how to document\nits essential parts.")]),n._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[n._v("  "),e("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n   * Escape special characters in the given string of html\n   * @param {string} input any html\n   * @returns {string} escaped HTML entities\n   */")]),n._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("function")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[n._v("escape")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[n._v("html")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("if")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),e("span",{pre:!0,attrs:{class:"token operator"}},[n._v("!")]),n._v("html"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[n._v("''")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n\n    "),e("span",{pre:!0,attrs:{class:"token keyword"}},[n._v("return")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[n._v("String")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("html"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[n._v("replace")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),n._v("specialRe"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[n._v("match")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[n._v("=>")]),n._v(" reverse"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("[")]),n._v("match"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("]")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(";")]),n._v("\n  "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v(",")]),n._v("\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br")])]),e("p",[n._v("The comment before the "),e("code",[n._v("escape")]),n._v(" function is a JSDoc comment. Note that it\nbegins with "),e("code",[n._v("/**")]),n._v(" instead of "),e("code",[n._v("/*")]),n._v(". JSDoc requires this.")]),n._v(" "),e("p",[n._v("Let's break down the earlier JSDoc example:")]),n._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[n._v("/**\n * Escape special characters in the given string of html\n * ...\n")])])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br")])]),e("p",[n._v("The first line of the comment is typically the "),e("em",[n._v("description")]),n._v(". This section\nsays "),e("em",[n._v("what the code is or does")]),n._v(".")]),n._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[n._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[n._v("*")]),n._v(" @param "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("{")]),n._v("string"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[n._v("}")]),n._v(" input any string\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br")])]),e("p",[n._v("On the second line:")]),n._v(" "),e("ul",[e("li",[e("code",[n._v("@param")]),n._v(" is "),e("strong",[n._v("a tag")]),n._v(": This tag indicates that we'll be documenting a function's parameter.")]),n._v(" "),e("li",[e("code",[n._v("{string}")]),n._v(" is "),e("strong",[n._v("a type")]),n._v('. It says that the input to this function is\na JavaScript "string." It could also say '),e("code",[n._v("{number}")]),n._v(",\n"),e("code",[n._v("{Object}")]),n._v(", "),e("code",[n._v("{Date}")]),n._v(", or any other JavaScript built-in type. And if you\ndefined a custom class, like "),e("code",[n._v("FooClass")]),n._v(", you can use it as a type, too! Just say "),e("code",[n._v("{FooClass}")]),n._v(".")]),n._v(" "),e("li",[e("code",[n._v("input any html")]),n._v(" is the description of the input.")])]),n._v(" "),e("p",[n._v("On the  line "),e("code",[n._v("@returns {string}")]),n._v(" we just have a description of the value "),e("code",[n._v("escaped HTML entities")]),n._v(".")]),n._v(" "),e("p",[n._v("JSDoc lets you specify  everything about your code:")]),n._v(" "),e("ul",[e("li",[n._v("use "),e("code",[n._v("@name")]),n._v(" to say what something is called,")]),n._v(" "),e("li",[e("code",[n._v("@kind")]),n._v(" for whether it's a function\nor a class,")]),n._v(" "),e("li",[e("code",[n._v("@param")]),n._v(" for its parameters")]),n._v(" "),e("li",[e("code",[n._v("documentation")]),n._v(" automatically populates "),e("code",[n._v("@name")]),n._v(", "),e("code",[n._v("@kind")]),n._v(", and "),e("code",[n._v("@memberof")]),n._v(" tags based on its reading of the code")])]),n._v(" "),e("p",[n._v("Install the "),e("code",[n._v("documentation")]),n._v(" binary with "),e("a",{attrs:{href:"https://www.npmjs.com/",target:"_blank",rel:"noopener noreferrer"}},[n._v("npm"),e("OutboundLink")],1),n._v(".")]),n._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[n._v("$ "),e("span",{pre:!0,attrs:{class:"token function"}},[n._v("npm")]),n._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[n._v("install")]),n._v(" -g documentation\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br")])]),e("p",[e("code",[n._v("documentation")]),n._v(" then installs a command called "),e("code",[n._v("documentation")]),n._v(". Run it with\n"),e("code",[n._v("--help")]),n._v(" or "),e("code",[n._v("--help <command>")]),n._v(" to get help.")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('➜  scapegoat git:(master) npx documentation help\nUsage:\n\n  # generate markdown docs for index.js and files it references\n  documentation build index.js -f md\n\n  # generate html docs for all files in src\n  documentation build src/** -f html -o docs\n\n  # document index.js, ignoring any files it requires or imports\n  documentation build index.js -f md --shallow\n\n  # build, serve, and live-update html docs for app.js\n  documentation serve app.js\n\n  # validate JSDoc syntax in util.js\n  documentation lint util.js\n\n  # update the API section of README.md with docs from index.js\n  documentation readme index.js --section=API\n\n  # build docs for all values exported by index.js\n  documentation build --document-exported index.js\n\n\nComandos:\n  documentation serve [input..]   generate, update, and display HTML\n                                  documentation\n  documentation build [input..]   build documentation\n  documentation lint [input..]    check for common style and uniformity mistakes\n  documentation readme [input..]  inject documentation into your README.md\n\nOpciones:\n  --version  Muestra número de versión                                [booleano]\n  --help     Muestra ayuda                                            [booleano]\n\nEjemplos:\n  documentation build foo.js -f md > API.md\n  documentation readme index.js -s "API Docs" --github\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br")])]),e("p",[n._v("Here is the help for the "),e("code",[n._v("build")]),n._v(" command:")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('$ documentation --help build\n\nOptions:\n  --version                  Show version number                       [boolean]\n  --help                     Show help                                 [boolean]\n  --theme, -t                specify a theme: this must be a valid theme module\n  --project-name             project name. by default, inferred from\n                             package.json\n  --project-version          project version. by default, inferred from\n                             package.json\n  --project-description      project description. by default, inferred from\n                             package.json\n  --project-homepage         project homepage. by default, inferred from\n                             package.json\n  --favicon                  favicon used in html\n  --watch, -w                watch input files and rebuild documentation when\n                             they change                               [boolean]\n  --markdown-toc             include a table of contents in markdown output\n                                                       [boolean] [default: true]\n  --markdown-toc-max-depth   specifies the max depth of the table of contents in markdown output\n                                                           [number] [default: 6]\n  --shallow                  shallow mode turns off dependency resolution, only\n                             processing the specified files (or the main script\n                             specified in package.json)\n                                                      [boolean] [default: false]\n  --config, -c               configuration file. an array defining explicit sort\n                             order                                      [string]\n  --no-package, --np         dont find and use package.json for project-\n                             configuration option defaults\n                                                      [boolean] [default: false]\n  --external                 a string / glob match pattern that defines which\n                             external modules will be whitelisted and included\n                             in the generated documentation.     [default: null]\n  --require-extension, --re  additional extensions to include in require() and\n                             import\'s search algorithm.For instance, adding .es5\n                             would allow require("adder") to find "adder.es5"\n  --parse-extension, --pe    additional extensions to parse as source code.\n  --private, -p              generate documentation tagged as private\n                                                      [boolean] [default: false]\n  --access, -a               Include only comments with a given access level,\n                             out of private, protected, public, undefined. By\n                             default, public, protected, and undefined access\n                             levels are included\n                [array] [choices: "public", "private", "protected", "undefined"]\n  --github, -g               infer links to github in documentation    [boolean]\n  --infer-private            Infer private access based on the name. This is a\n                             regular expression that is used to match the name\n                                                                        [string]\n  --document-exported        Generate documentation for all exported bindings\n                             and members even if there is no JSDoc for them\n                                                      [boolean] [default: false]\n  --sort-order               The order to sort the documentation\n                                [choices: "source", "alpha"] [default: "source"]\n  --output, -o               output location. omit for stdout, otherwise is a\n                             filename for single-file outputs and a directory\n                             name for multi-file outputs like html\n                                                             [default: "stdout"]\n  --format, -f       [choices: "json", "md", "remark", "html"] [default: "json"]\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br"),e("span",{staticClass:"line-number"},[n._v("18")]),e("br"),e("span",{staticClass:"line-number"},[n._v("19")]),e("br"),e("span",{staticClass:"line-number"},[n._v("20")]),e("br"),e("span",{staticClass:"line-number"},[n._v("21")]),e("br"),e("span",{staticClass:"line-number"},[n._v("22")]),e("br"),e("span",{staticClass:"line-number"},[n._v("23")]),e("br"),e("span",{staticClass:"line-number"},[n._v("24")]),e("br"),e("span",{staticClass:"line-number"},[n._v("25")]),e("br"),e("span",{staticClass:"line-number"},[n._v("26")]),e("br"),e("span",{staticClass:"line-number"},[n._v("27")]),e("br"),e("span",{staticClass:"line-number"},[n._v("28")]),e("br"),e("span",{staticClass:"line-number"},[n._v("29")]),e("br"),e("span",{staticClass:"line-number"},[n._v("30")]),e("br"),e("span",{staticClass:"line-number"},[n._v("31")]),e("br"),e("span",{staticClass:"line-number"},[n._v("32")]),e("br"),e("span",{staticClass:"line-number"},[n._v("33")]),e("br"),e("span",{staticClass:"line-number"},[n._v("34")]),e("br"),e("span",{staticClass:"line-number"},[n._v("35")]),e("br"),e("span",{staticClass:"line-number"},[n._v("36")]),e("br"),e("span",{staticClass:"line-number"},[n._v("37")]),e("br"),e("span",{staticClass:"line-number"},[n._v("38")]),e("br"),e("span",{staticClass:"line-number"},[n._v("39")]),e("br"),e("span",{staticClass:"line-number"},[n._v("40")]),e("br"),e("span",{staticClass:"line-number"},[n._v("41")]),e("br"),e("span",{staticClass:"line-number"},[n._v("42")]),e("br"),e("span",{staticClass:"line-number"},[n._v("43")]),e("br"),e("span",{staticClass:"line-number"},[n._v("44")]),e("br"),e("span",{staticClass:"line-number"},[n._v("45")]),e("br"),e("span",{staticClass:"line-number"},[n._v("46")]),e("br"),e("span",{staticClass:"line-number"},[n._v("47")]),e("br"),e("span",{staticClass:"line-number"},[n._v("48")]),e("br"),e("span",{staticClass:"line-number"},[n._v("49")]),e("br"),e("span",{staticClass:"line-number"},[n._v("50")]),e("br"),e("span",{staticClass:"line-number"},[n._v("51")]),e("br"),e("span",{staticClass:"line-number"},[n._v("52")]),e("br"),e("span",{staticClass:"line-number"},[n._v("53")]),e("br"),e("span",{staticClass:"line-number"},[n._v("54")]),e("br"),e("span",{staticClass:"line-number"},[n._v("55")]),e("br"),e("span",{staticClass:"line-number"},[n._v("56")]),e("br"),e("span",{staticClass:"line-number"},[n._v("57")]),e("br"),e("span",{staticClass:"line-number"},[n._v("58")]),e("br")])])])}),[],!1,null,null,null);s.default=a.exports}}]);